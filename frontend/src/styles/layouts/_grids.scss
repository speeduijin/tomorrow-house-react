@use "../constants" as const;
@use "../mixins" as mixin;
@use "sass:math";

/*
 * MoBILE (<768px) --------------------------------
 * fixture                             sm
 * # of columns                        4
 * gutter                              20px
 * margin                              5px
 * container-size                      100% - (5px * 2)
*
 * TABLET (≥768px) --------------------------------
 * fixture                             md
 * # of columns                        12
 * gutter                              20px
 * margin                              30px
 * container-size                      100% - (30px * 2)
 * max-width                           960px
*
 * DESKTOP (≥1200px) --------------------------------
 * fixture                             lg
 * # of columns                        12
 * gutter                              20px
 * unit                                75px
 * margin                              auto
 * container-size                      1140px
 * max-width                           1140px
*/

.container {
  width: 100%;
  padding: 0 const.$sm-margin;
  margin: 0 auto;

  .row {
    display: flex;
    flex-wrap: wrap;
  }

  [class^="col-"] {
    padding: 0 math.div(const.$gutter, 2);
  }

  @for $i from 1 through const.$sm-columns {
    .col-sm-#{$i} {
      width: math.percentage(math.div($i, const.$sm-columns));
    }
  }

  @include mixin.responsive(T) {
    max-width: const.$md-max-container;
    padding: 0 const.$md-margin;

    @for $i from 1 through const.$md-columns {
      .col-md-#{$i} {
        width: math.percentage(math.div($i, const.$md-columns));
      }
    }
  }

  @include mixin.responsive(D) {
    max-width: const.$lg-max-container;
    padding: 0;

    @for $i from 1 through const.$lg-columns {
      .col-lg-#{$i} {
        width: (const.$lg-unit + const.$gutter) * $i;
      }
    }
  }
}
